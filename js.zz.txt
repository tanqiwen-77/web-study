字符串对象方法
  1.search
    String.prototype.search(reg)
    返回出现的位置
    search()方法用于检索字符串中指定的子字符串，或检索与正则表达式相匹配的子字符串
    方法返回第一个匹配结果 index，查找不到返回 -1
    search()并不执行全局匹配，它将忽略标志 g ,并且总是从字符串的开始进行检索
    例子：
    'A11B2C3D4'.search(/\d/)   1
    忽略大小写：i——ignore
2.match
  String.prototype.match(reg)
量词：+
量词变化：\d、\d\d和\d+
全局匹配：g——global
  match()方法将检索字符串，以找到一个或多个与RegExp匹配的文本
  RegExp是否具有标志 g 对结果影响跟大
  非全局调用，即没有 g
    如果RegExp没有标志 g,那么 match()方法就只能在字符串中执行一次匹配
    如果没有找到任何匹配的文本，将返回null
    否则它将返回一个数组，其中存放了与它找到的匹配文本有关的信息
    返回数组的第一个元素存放的是匹配文本，而其余的元素存放的是与正则表达式的子表达式匹配的文本
    除了常规的数组元素之外，返回的数组还含有2个对象属性
       index 声明匹配文本的起始字符在字符串的位置
       input 声明对 stringObject的引用
全局调用
  如果RegExp具有标志 g,则match()方法将执行全局检索，找到字符串中的所有匹配子字符串
    没有找到任何匹配的子串，则返回null
    如果找到了一个或多个匹配的子串，则返回一个数组
 数组元素中存放地字符串中所有的匹配子串，而且也没有index 属性或input属性
 
3.replace
  String.prototype.replace(str,replaceStr)
  String.prototype.replace(reg,replaceStr)
  String.prototype.replace(reg,function)
  function参数含义
  function会在每次匹配替换的时候调用，有四个参数
    匹配字符串
    正则表达式分组内容，没有分组则没有该参数
    匹配项在字符串中 index
    原字符串

任意字符
[abc]
例子：o[usb]t——obt、ost、out
范围
[a-z]、[0-9]
例子：id[0-9]——id0、id5
排除
[^a]
例子：o[^0-9]t——oat、o?t、o t
组合
[a-z0-9A-Z]
转义字符
.（点）——任意字符
\d、\w、\s
\D、\W、\S
